#!/usr/bin/python3

import subprocess

def trayerStart():
    rsChoice = input("Start trayer? [Y/N]: ")

    if(rsChoice == "y" or rsChoice == "Y" or rsChoice == "yes" or rsChoice == "Yes"):
        ret = subprocess.Popen(["trayer", "--widthtype", "request", "--heighttype", "request", "--edge", "right", "--align", "center", "--SetDockType", "true", "--transparent", "true", "--alpha", "0", "--tint", "0x000000", "--iconspacing", "8", "--padding", "3", "--SetPartialStrut", "true"], close_fds = True)
        if(ret.returncode != None):
            print("\nFailed to launch trayer.\n")

        else:
            print("\nSuccessfully launched trayer.\n")

    elif(rsChoice != "y" or rsChoice != "Y" or rsChoice != "yes" or rsChoice != "Yes"):
        print("\nExiting script.\n")
        exit()

trayerpid = subprocess.getoutput('sudo pidof trayer')
pids = list(trayerpid.split())

if(trayerpid != ""):
    print("\nDetected PID(s) of trayer: {pids}".format(pids = pids))
    choice = input("Kill trayer at PID(s): {pids}? [Y/N]: ".format(pids = pids))

    if(choice == "y" or choice == "Y" or choice == "yes" or choice == "Yes"):
        print("\nKilling trayer at PID(s) {pids}".format(pids = pids))

        i = 0
        while i != len(pids):
            ret = subprocess.run(["sudo", "kill", pids[i]])
            if(ret.returncode != 0):
                print("\nFailed to kill process at PID: {pid}\n".format(pid = pids[i]))

            else:
                print("\nSuccessfully killed process at PID: {pid}\n".format(pid = pids[i]))

            i += 1

    elif(choice != "y" or choice != "Y" or choice != "yes" or choice != "Yes"):
        print("\nExiting script.\n")
        exit()

    trayerStart()

else:
    print("\nPID(s) of trayer undetected. System tray hasn't been started.\n")
    trayerStart()
